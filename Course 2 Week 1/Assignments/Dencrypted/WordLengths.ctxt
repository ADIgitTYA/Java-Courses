#BlueJ class context
comment0.target=WordLengths
comment0.text=\r\n\ Write\ a\ description\ of\ WordLengths\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=resource\ counts
comment1.target=int[]\ countWordLengths(edu.duke.FileResource,\ int[])
comment1.text=\r\n\ Write\ a\ void\ method\ countWordLengths\ that\ has\ two\ parameters,\r\n\ \ \ \ \ \ \ a\ FileResource\ named\ resource\ and\ an\ integer\ array\ named\ counts.\r\n\ \ \ \ \ \ \ This\ method\ should\ read\ in\ the\ words\ from\ resource\ and\ count\r\n\ \ \ \ \ \ \ the\ number\ of\ words\ of\ each\ length\ for\ all\ the\ words\ in\ resource,\ \r\n\ \ \ \ \ \ \ storing\ these\ counts\ in\ the\ array\ counts.\r\n\ \ \ \ \ -\ For\ example,\ after\ this\ method\ executes,\ counts[k]\ should\ contain\r\n\ \ \ \ \ \ \ the\ number\ of\ words\ of\ length\ k.\r\n\r\n\ \ \ \ \ -\ If\ a\ word\ has\ a\ non-letter\ as\ the\ first\ or\ last\ character,\ \r\n\ \ \ \ \ \ \ it\ should\ not\ be\ counted\ as\ part\ of\ the\ word\ length.\r\n\ \ \ \ \ \ \ For\ example,\ the\ word\ And,\ would\ be\ considered\ of\ length\ 3\r\n\ \ \ \ \ \ \ (the\ comma\ is\ not\ counted),\ the\ word\ \u201Cblue-jeans\u201D\ would\ be\ \r\n\ \ \ \ \ \ \ considered\ of\ length\ 10\ \r\n\ \ \ \ \ \ \ (the\ double\ quotes\ are\ not\ counted,\ but\ the\ hyphen\ is).\r\n\ \ \ \ \ \ \ Note\ that\ we\ will\ miscount\ some\ words,\ such\ as\ \u201CHello,\u201D\r\n\ \ \ \ \ \ \ which\ will\ be\ counted\ as\ 6\ since\ we\ don\u2019t\ count\ the\ double\r\n\ \ \ \ \ \ \ quotes\ but\ will\ count\ the\ comma,\ but\ that\ is\ OK\ as\ there\ should\r\n\ \ \ \ \ \ \ not\ be\ many\ words\ in\ that\ category.\r\n\r\n\ \ \ \ \ -\ For\ any\ words\ equal\ to\ or\ larger\ than\ the\ last\ index\ of\ the\r\n\ \ \ \ \ \ \ counts\ array,\ count\ them\ as\ the\ largest\ size\ represented\ in\ \r\n\ \ \ \ \ \ \ the\ counts\ array.\r\n\r\n\ \ \ \ \ -\ You\ may\ want\ to\ consider\ using\ the\ Character.isLetter\ method\ \r\n\ \ \ \ \ \ \ that\ returns\ true\ if\ a\ character\ is\ a\ letter,\ and\ false\ otherwise.\r\n\ \ \ \ \ \ \ For\ example,\ Character.isLetter(\u2018a\u2019)\ returns\ true,\ and\r\n\ \ \ \ \ \ \ Character.isLetter(\u2018-\u2019)\ returns\ false.\r\n
comment2.params=
comment2.target=void\ testCountWordLengths()
comment3.params=values
comment3.target=int\ indexOfMax(int[])
comment3.text=\r\n\ Write\ a\ method\ indexOfMax\ that\ has\ one\ parameter\ named\ values\ that\ is\ an\ integer\ array.\r\n\ \ \ \ \ \ \ This\ method\ returns\ the\ index\ position\ of\ the\ largest\ element\ in\ values.\r\n\ \ \ \ \ \ \ Then\ add\ code\ to\ the\ method\ testCountWordLengths\ to\ call\ indexOfMax\ to\ determine\ the\ most\ common\ word\ length\ in\ the\ file\r\n\ \ \ \ \ \ \ For\ example,\ calling\ indexOfMax\ after\ calling\ countWordLengths\ on\ the\ file\ smallHamlet.txt\ should\ return\ 3.\r\n
numComments=4
